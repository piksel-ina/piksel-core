services:
  postgres:
    image: postgis/postgis:16-3.5
    platform: linux/x86_64
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  odc:
    build:
      context: ../
      dockerfile: docker/odc/Dockerfile
    environment:
      - ODC_DEFAULT_DB_USERNAME=${POSTGRES_USER}
      - ODC_DEFAULT_DB_DATABASE=${POSTGRES_DB}
      - ODC_DEFAULT_DB_HOSTNAME=${POSTGRES_HOST:-postgres}
      - ODC_DEFAULT_DB_PASSWORD=${POSTGRES_PASSWORD}
      - ODC_DEFAULT_DB_PORT=${POSTGRES_PORT:-5432}
    volumes:
      - ../products:/home/venv/products
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    command: tail -f /dev/null
    healthcheck:
      test: ["CMD", "datacube", "--version"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  jupyter:
    build:
      context: ../
      dockerfile: docker/jupyter/Dockerfile
    user: "1000:1000"
    environment:
      - ODC_DEFAULT_DB_USERNAME=${POSTGRES_USER}
      - ODC_DEFAULT_DB_DATABASE=${POSTGRES_DB}
      - ODC_DEFAULT_DB_HOSTNAME=${POSTGRES_HOST:-postgres}
      - ODC_DEFAULT_DB_PASSWORD=${POSTGRES_PASSWORD}
      - ODC_DEFAULT_DB_PORT=${POSTGRES_PORT:-5432}
      - PYTHONPATH=/home/venv/notebooks
      - JUPYTER_ENABLE_LAB=yes
      - ODC_CONFIG_PATH=${ODC_CONFIG_PATH}
    ports:
      - "${JUPYTER_PORT}:8888"
    volumes:
      - ../notebooks:/home/venv/notebooks
    depends_on:
      - postgres
      - odc
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

networks:
  default:
    name: ${COMPOSE_PROJECT_NAME:-piksel}-net

volumes:
  postgres_data:
