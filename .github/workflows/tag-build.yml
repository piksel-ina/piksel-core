name: Tag-based Docker Build

on:
  push:
    tags:
      - "odc-*" # ODC-specific tags
      - "jupyter-*" # Jupyter-specific tags

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
  ECR_REGISTRY: ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com

jobs:
  determine-component:
    runs-on: ubuntu-latest
    outputs:
      component: ${{ steps.parse.outputs.component }}
      version: ${{ steps.parse.outputs.version }}

    steps:
      - name: Parse tag
        id: parse
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}

          if [[ $TAG_NAME == odc-* ]]; then
            echo "component=odc" >> $GITHUB_OUTPUT
            echo "version=${TAG_NAME#odc-}" >> $GITHUB_OUTPUT
          elif [[ $TAG_NAME == jupyter-* ]]; then
            echo "component=jupyter" >> $GITHUB_OUTPUT
            echo "version=${TAG_NAME#jupyter-}" >> $GITHUB_OUTPUT
          else
            echo "ERROR: Unsupported tag format: $TAG_NAME"
            exit 1
          fi

          echo "Component: $COMPONENT"
          echo "Version: $VERSION"

  build-odc:
    if: needs.determine-component.outputs.component == 'odc'
    needs: determine-component
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: github-actions-odc-${{ github.run_id }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Generate tags
        id: tags
        run: |
          REPO="${{ env.ECR_REGISTRY }}/piksel-core"
          VERSION="${{ needs.determine-component.outputs.version }}"
          SHORT_SHA=${GITHUB_SHA:0:7}
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)

          TAGS="$REPO:odc-$VERSION"
          TAGS="$TAGS,$REPO:odc-$SHORT_SHA"
          TAGS="$TAGS,$REPO:odc-v${TIMESTAMP}"

          echo "tags=$TAGS" >> $GITHUB_OUTPUT
          echo "Generated tags: $TAGS"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push ODC image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/odc/Dockerfile
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Output summary
        run: |
          echo "### Successfully built ODC image" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ needs.determine-component.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Repository:** ${{ env.ECR_REGISTRY }}/piksel-core" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.tags.outputs.tags }}" | tr ',' '\n' | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY

  build-jupyter:
    if: needs.determine-component.outputs.component == 'jupyter'
    needs: determine-component
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: github-actions-jupyter-${{ github.run_id }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Generate tags
        id: tags
        run: |
          REPO="${{ env.ECR_REGISTRY }}/piksel-core"
          VERSION="${{ needs.determine-component.outputs.version }}"
          SHORT_SHA=${GITHUB_SHA:0:7}
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)

          TAGS="$REPO:jupyter-$VERSION"
          TAGS="$TAGS,$REPO:jupyter-$SHORT_SHA"
          TAGS="$TAGS,$REPO:jupyter-v${TIMESTAMP}"

          echo "tags=$TAGS" >> $GITHUB_OUTPUT
          echo "Generated tags: $TAGS"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Jupyter image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/jupyter/Dockerfile
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Output summary
        run: |
          echo "### Successfully built Jupyter image" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ needs.determine-component.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Repository:** ${{ env.ECR_REGISTRY }}/piksel-core" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.tags.outputs.tags }}" | tr ',' '\n' | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
